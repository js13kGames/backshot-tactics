@font-face {
  font-family: "p";
  src: url("p.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
}

*, *::before, *::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  transition: all 0.3s ease-in-out;
  font-family: inherit;
  scrollbar-width: thin;
  scrollbar-color: var(--red) var(--gray);
}

:root {
  --red: #f26f4b;
  --dark-red: #743524;
  --gray: #323c46;
  --blue: #0c4961;
  --light-blue: #64bcb3;
  --white: #f7f7f7;
  --black: #111;
  --yellow: #cfdd0d;
  --violet: #f011f8;
  font-family: "p", monospace;
  font-size: 5vmin;
  color: var(--white);
}

body {
  overflow: hidden;
  height: 100vh;
  width: 100vw;
  background-color: var(--gray);
  background-size: 5vmin 5vmin;
  background-image: linear-gradient(to right, var(--blue) 2vmin, transparent 2vmin), linear-gradient(to bottom, var(--blue) 2vmin, transparent 2vmin);
}

a:focus {
  outline: 0.1rem solid var(--white);
}

button,
input {
  background-image: linear-gradient(var(--blue), var(--gray));
  color: var(--white);
  font-weight: bold;
  font-size: 130%;
  border: 0.2rem solid var(--light-blue);
  padding: 0.5rem;
  cursor: pointer;
}

button:hover,
input:hover {
  filter: brightness(150%);
}

button:focus,
input:focus {
  border-color: var(--white);
}

.nope {
  cursor: not-allowed;
}

h1 {
  font-size: 4rem;
  color: var(--red);
  text-shadow: 0.2rem 0.2rem var(--gray);
}

ul, ol {
  padding-left: 1rem;
}

ul li {
  list-style: square;
}

b {
  color: var(--red);
}

a, a:visited {
  color: var(--light-blue);
}

body > * {
  opacity: 0;
  height: 100vh;
  width: 100vw;
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  overflow: hidden;
  transform: scale(0) translateY(-210vh);
  background-color: rgba(0, 0, 0, 0.3);
}

body:not(.connected):not(.initial) .connecting,
body[data-state="wait"] .wait,
body[data-state="game-over"].won .won,
body[data-state="game-over"].lost .lost,
body[data-state="game-over"].abandon .abandon {
  opacity: 0.9;
  transform: scale(1) translateY(0rem);
  font-size: 130%;
}

.wait,
.won,
.lost,
.abandon  {
  flex-direction: column;
  text-align: center;
  background-color: rgba(0, 0, 0, .7);
}

.wait small {
  color: var(--yellow);
}

main {
  opacity: 0;
  perspective: 200vmin;
}

body.connected:not([data-state="wait"]) main {
  opacity: 1;
  transform: scale(1) translateY(0rem);
}

body.connected[data-state="game-over"] main {
  z-index: -100;
  opacity: 0.5;
}

.splash {
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  align-items: center;
  text-align: center;
}

form.start {
  display: flex;
  flex-wrap: nowrap;
}

form.start:focus-within {
  transform: scale(1.05);
}

form.start input {
  width: 13rem;
  margin-right: 0.5rem;
}

a.ranking {
  font-size: 120%;
  color: var(--yellow);
}

a.bot {
  margin: 1rem;
}

.how-info {
  text-align: left;
  overflow: auto;
  border: 0.2rem solid var(--light-blue);
  padding: 1rem;
  font-size: 80%; 
  line-height: 1.2;
  background-color: rgba(0, 0, 0, 0.3);
}

.how-info h2 {
  text-align: center;
  margin-bottom: 0.5rem;
}

body.initial .splash {
  opacity: 1;
  transform: scale(1) translateY(0rem);
}

.field {
  position: relative;
  --field-size: 90vmin;
  height: var(--field-size);
  width: var(--field-size);
  --cell-h: calc(var(--field-size) / var(--h));
  --cell-w: calc(var(--field-size) / var(--w));
  background-color: var(--black);
  background-size: var(--cell-w) var(--cell-h);
  background-position: -0.1rem -0.1rem;
  background-image: linear-gradient(to right, var(--blue) 1vmin, transparent 1vmin), linear-gradient(to bottom, var(--blue) 1vmin, transparent 1vmin);
  box-shadow: 0 0 0.5rem var(--black);
  transition-duration: 1s;
  transform: rotateX(0deg) scale(1);
}

.field.ok {
  transform: rotateX(20deg) translateY(-4%);
}

.field > * {
  position: absolute;
  top: 0;
  left: 0;
  height: var(--cell-h);
  width: var(--cell-w);
  transform: translateX(calc(var(--cell-w) * var(--x))) translateY(calc(var(--cell-h) * var(--y))) scale(var(--scale, 1));
  text-decoration: none;
  color: var(--white);
}

.char {
  --char-color: var(--gray);
  opacity: 0.7;
  filter: sepia();
}

[data-owner="0"] {
  --char-color: var(--violet);
}

[data-owner="1"] {
  --char-color: var(--yellow);
}

.char .body {
  position: absolute;
  background-color: var(--char-color);
  -webkit-clip-path: polygon(0% 0%, 50% 0%, 100% 0%, 50% 100%);
  clip-path: polygon(0% 0%, 50% 0%, 100% 0%, 50% 100%);
  height: 40%;
  width: 40%;
  top: 30%;
  left: 30%;
}

.char[data-owner] .body {
  -webkit-clip-path: polygon(10% 0%, 50% 20%, 90% 0%, 50% 100%);
  clip-path: polygon(10% 0%, 50% 20%, 90% 0%, 50% 100%);
}

.char[data-owner] {
  opacity: 1;
  filter: none;
}

.char.own {
  box-shadow: 0 0 0.3rem var(--white);
}

.char[data-dir="right"] .body {
  transform: rotate(-90deg);
}

.char[data-dir="left"] .body {
  transform: rotate(90deg);
}

.char[data-dir="up"] .body {
  transform: rotate(180deg);
}

.char .dirs {
  display: flex;
  justify-content: space-between;
  position: absolute;
  bottom: 0;
  width: 100%;
  height: 25%;
}

.char .dirs > * {
  display: block;
  height: 100%;
  width: 25%;
  transform: scale(0.7);
}

.char .dirs > .next {
  transform: scale(1);
}

.char .dirs > *::after {
  content: "";
  display: block;
  text-align: center;
  height: 100%;
  width: 100%;
  background-color: var(--white);
  -webkit-clip-path: polygon(35% 45%, 35% 0, 65% 0, 65% 45%, 100% 45%, 50% 100%, 0 45%);
  clip-path: polygon(35% 45%, 35% 0, 65% 0, 65% 45%, 100% 45%, 50% 100%, 0 45%);
  opacity: 0.5;
}

.char .dirs .up::after {
  transform: rotate(180deg);  
}

.char .dirs .left::after {
  transform: rotate(90deg);
}

.char .dirs .right::after {
  transform: rotate(-90deg);
}

.char .dirs .next::after {
  opacity: 0.9;
}

.char .hp {
  --hp: 100;
  position: absolute;
  top: 7%;
  left: 7%;
  right: 7%;
  height: 12%;
  background-color: var(--white);
  z-index: 10;
}

.char .hp::after {
  content: "";
  width: calc(var(--hp) * 1%);
  background-image: linear-gradient(var(--red), var(--dark-red));
  display: block;
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
}

.char.died .body {
  transition-duration: 2s;
  -webkit-clip-path: polygon(110% 110%, 150% 120%, 190% 100%, 0% 100%);
  clip-path: polygon(110% 110%, 150% 120%, 190% 100%, 0% 100%);
}

.bullet {
  --scale: 0.3;
  background-image: radial-gradient(var(--red), var(--yellow));
  transition-duration: 0.6s;
  border-radius: 50%;
}

.dmg {
  color: var(--white);
  background-color: var(--black);
  border: 0.1rem solid var(--red);
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 50%;
  --scale: 0.7;
}

.particle {
  border-radius: 50%;
  opacity: 0.7;
  transition-duration: 1s;
}

.particle.go {
  opacity: 0;
}

div.ranking {
  background: rgba(0, 0, 0, .85);
  flex-direction: column;
  z-index: 200;
}

div.ranking .table {
  max-height: 60vh;
  overflow: auto;
  margin: 1rem;
  text-align: left;
  max-width: 100%;
  font-size: 80%;
  overflow: auto;
}

thead {
  position: sticky;
  top: 0;
  background: var(--black);
  white-space: nowrap;
}

td {
  border-top: 0.1rem solid gray;
  background-color: var(--gray);
}

td, th {
  padding: 0.4rem;
}

div.ranking.show {
  opacity: 1;
  transform: scale(1) translateY(0rem);
}

header {
  height: 7vh;
  width: 100%;
  top: 0;
  opacity: 1;
  background-image: linear-gradient(var(--black) 90%, var(--gray));
  border-bottom: 0.1rem solid var(--gray);
}

header .vs {
  margin: 1rem;
}

header .name {
  color: var(--char-color);
  position: relative;
  flex: 1;
  display: flex;
}

header .name:first-child {
  flex-direction: row-reverse;
}

header .name .hp {
  transform: scaleX(0.9) scaleY(0.7);
}

header .name:first-child .hp {
  transform: scaleX(-0.9) scaleY(0.7);
}

header .hp {
  --hp: 100;
  background-color: var(--black);
  border: 0.1rem solid var(--white);
  display: block;
  flex: 1;
  position: relative;
}

header .hp::after {
  content: "";
  width: calc(var(--hp) * 1%);
  background-image: linear-gradient(var(--red), var(--dark-red));
  display: block;
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
}

footer {
  height: 7vh;
  width: 100%;
  bottom: 0;
  opacity: 0;
  background-image: linear-gradient(var(--gray), var(--black) 10%);
  border-top: 0.1rem solid var(--gray);
}

body.connected footer,
body.connected header {
  opacity: 1;
  transform: scale(1) translateY(0);
}

footer > * {
  opacity: 0;
  transform: translateY(10rem);
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  text-align: center;
  display: flex;
  align-items: center;
  justify-content: center;
}

[data-state="pick"] footer .picking,
[data-state="play"][data-turn="me"] footer .me,
[data-state="play"][data-turn="opp"] footer .opp {
  opacity: 1;
  transform: translateY(0rem);
}

.picking span {
  display: none;
}

.picking.done .wait-opp {
  display: block;
}

.picking:not(.done) .pick-chars {
  display: block;
}
